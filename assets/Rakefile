require 'fileutils'

$inkscape = "/Applications/Inkscape.app/Contents/Resources/bin/inkscape"
$contents = File.open("Contents.json").read()

def inkscape_convert(svg, output, dpi, size)
  if size != 0
    system "#{$inkscape} -w #{size} -h #{size} -e '#{output}' '#{svg}' &> /dev/null"
  else
    system "#{$inkscape} -d #{dpi} -e '#{output}' '#{svg}' &> /dev/null"
  end
end

def create_imageset(imageset_dir, svg, size = 0)
  name = File.basename(svg, ".svg")
  FileUtils.mkdir(imageset_dir)
  base_dpi = 163
  inkscape_convert(svg, "#{imageset_dir}/#{name}.png", base_dpi, size)
  inkscape_convert(svg, "#{imageset_dir}/#{name}@2x.png", base_dpi * 2, size * 2)
  inkscape_convert(svg, "#{imageset_dir}/#{name}_iPad.png", base_dpi * 2, size * 2)
  inkscape_convert(svg, "#{imageset_dir}/#{name}_iPad@2x.png", base_dpi * 4, size * 4)
  contents_file = File.open("#{imageset_dir}/Contents.json", "w")
  contents_file.write($contents.gsub("NAME_OF_FILE_HERE", name))
end

ios_svgs = Dir.glob("ios/*.svg")
ios_outputs = []
ios_svgs.each do |svg|
  name = File.basename(svg, ".svg")
  imageset_dir = "../noughts-ios/noughts/Images.xcassets/#{name}.imageset"
  file imageset_dir => [svg] do
    create_imageset(imageset_dir, svg)
  end
  ios_outputs << imageset_dir
end

ios_avatar_svgs = Dir.glob("ios/avatars/*.svg")
ios_avatar_outputs = []
ios_avatar_svgs.each do |avatar|
  name = File.basename(avatar, ".svg")
  [20, 40, 75, 100].each do |size|
    imageset_dir = "../noughts-ios/noughts/Images.xcassets/#{name}_#{size}.imageset/"
    file imageset_dir => [avatar] do
      create_imageset(imageset_dir, avatar, size) 
    end
    ios_avatar_outputs << imageset_dir
  end
end

task :clean do
  ios_image_sets = Dir.glob("../noughts-ios/noughts/Images.xcassets/*.imageset")
  ios_image_sets.each do |file|
    FileUtils.rm_r file
  end
end

task :default => [*ios_outputs, *ios_avatar_outputs]
